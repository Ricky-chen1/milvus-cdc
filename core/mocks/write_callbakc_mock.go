// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	model "github.com/zilliztech/milvus-cdc/core/model"
	"github.com/zilliztech/milvus-cdc/core/util"

	writer "github.com/zilliztech/milvus-cdc/core/writer"
)

// WriteCallback is an autogenerated mock type for the WriteCallback type
type WriteCallback struct {
	util.CDCMark
	mock.Mock
}

// OnFail provides a mock function with given fields: data, err
func (_m *WriteCallback) OnFail(data *model.CDCData, err error) {
	_m.Called(data, err)
}

// OnSuccess provides a mock function with given fields: collectionID, channelInfos
func (_m *WriteCallback) OnSuccess(collectionID int64, channelInfos map[string]writer.CallbackChannelInfo) {
	_m.Called(collectionID, channelInfos)
}

// cdc provides a mock function with given fields:
func (_m *WriteCallback) cdc() {
	_m.Called()
}

type mockConstructorTestingTNewWriteCallback interface {
	mock.TestingT
	Cleanup(func())
}

// NewWriteCallback creates a new instance of WriteCallback. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWriteCallback(t mockConstructorTestingTNewWriteCallback) *WriteCallback {
	mock := &WriteCallback{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
