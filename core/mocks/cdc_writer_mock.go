// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	model "github.com/zilliztech/milvus-cdc/core/model"
	"github.com/zilliztech/milvus-cdc/core/util"
	writer "github.com/zilliztech/milvus-cdc/core/writer"
)

// CDCWriter is an autogenerated mock type for the CDCWriter type
type CDCWriter struct {
	util.CDCMark
	mock.Mock
}

// Flush provides a mock function with given fields: _a0
func (_m *CDCWriter) Flush(_a0 context.Context) {
	_m.Called(_a0)
}

// Write provides a mock function with given fields: _a0, data, callback
func (_m *CDCWriter) Write(_a0 context.Context, data *model.CDCData, callback writer.WriteCallback) error {
	ret := _m.Called(_a0, data, callback)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.CDCData, writer.WriteCallback) error); ok {
		r0 = rf(_a0, data, callback)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// cdc provides a mock function with given fields:
func (_m *CDCWriter) cdc() {
	_m.Called()
}

type mockConstructorTestingTNewCDCWriter interface {
	mock.TestingT
	Cleanup(func())
}

// NewCDCWriter creates a new instance of CDCWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCDCWriter(t mockConstructorTestingTNewCDCWriter) *CDCWriter {
	mock := &CDCWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
